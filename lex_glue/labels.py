"""from https://huggingface.co/datasets/lex_glue/blob/main/lex_glue.py

Need to get mappings to class names if we want to be able to do seq2seq versions
"""

ECTHR_ARTICLES = ["2", "3", "5", "6", "8", "9", "10", "11", "14", "P1-1"]

EUROVOC_CONCEPTS = [
    "100163",
    "100168",
    "100169",
    "100170",
    "100171",
    "100172",
    "100173",
    "100174",
    "100175",
    "100176",
    "100177",
    "100179",
    "100180",
    "100183",
    "100184",
    "100185",
    "100186",
    "100187",
    "100189",
    "100190",
    "100191",
    "100192",
    "100193",
    "100194",
    "100195",
    "100196",
    "100197",
    "100198",
    "100199",
    "100200",
    "100201",
    "100202",
    "100204",
    "100205",
    "100206",
    "100207",
    "100212",
    "100214",
    "100215",
    "100220",
    "100221",
    "100222",
    "100223",
    "100224",
    "100226",
    "100227",
    "100229",
    "100230",
    "100231",
    "100232",
    "100233",
    "100234",
    "100235",
    "100237",
    "100238",
    "100239",
    "100240",
    "100241",
    "100242",
    "100243",
    "100244",
    "100245",
    "100246",
    "100247",
    "100248",
    "100249",
    "100250",
    "100252",
    "100253",
    "100254",
    "100255",
    "100256",
    "100257",
    "100258",
    "100259",
    "100260",
    "100261",
    "100262",
    "100263",
    "100264",
    "100265",
    "100266",
    "100268",
    "100269",
    "100270",
    "100271",
    "100272",
    "100273",
    "100274",
    "100275",
    "100276",
    "100277",
    "100278",
    "100279",
    "100280",
    "100281",
    "100282",
    "100283",
    "100284",
    "100285",
]

LEDGAR_CATEGORIES = [
    "Adjustments",
    "Agreements",
    "Amendments",
    "Anti-Corruption Laws",
    "Applicable Laws",
    "Approvals",
    "Arbitration",
    "Assignments",
    "Assigns",
    "Authority",
    "Authorizations",
    "Base Salary",
    "Benefits",
    "Binding Effects",
    "Books",
    "Brokers",
    "Capitalization",
    "Change In Control",
    "Closings",
    "Compliance With Laws",
    "Confidentiality",
    "Consent To Jurisdiction",
    "Consents",
    "Construction",
    "Cooperation",
    "Costs",
    "Counterparts",
    "Death",
    "Defined Terms",
    "Definitions",
    "Disability",
    "Disclosures",
    "Duties",
    "Effective Dates",
    "Effectiveness",
    "Employment",
    "Enforceability",
    "Enforcements",
    "Entire Agreements",
    "Erisa",
    "Existence",
    "Expenses",
    "Fees",
    "Financial Statements",
    "Forfeitures",
    "Further Assurances",
    "General",
    "Governing Laws",
    "Headings",
    "Indemnifications",
    "Indemnity",
    "Insurances",
    "Integration",
    "Intellectual Property",
    "Interests",
    "Interpretations",
    "Jurisdictions",
    "Liens",
    "Litigations",
    "Miscellaneous",
    "Modifications",
    "No Conflicts",
    "No Defaults",
    "No Waivers",
    "Non-Disparagement",
    "Notices",
    "Organizations",
    "Participations",
    "Payments",
    "Positions",
    "Powers",
    "Publicity",
    "Qualifications",
    "Records",
    "Releases",
    "Remedies",
    "Representations",
    "Sales",
    "Sanctions",
    "Severability",
    "Solvency",
    "Specific Performance",
    "Submission To Jurisdiction",
    "Subsidiaries",
    "Successors",
    "Survival",
    "Tax Withholdings",
    "Taxes",
    "Terminations",
    "Terms",
    "Titles",
    "Transactions With Affiliates",
    "Use Of Proceeds",
    "Vacations",
    "Venues",
    "Vesting",
    "Waiver Of Jury Trials",
    "Waivers",
    "Warranties",
    "Withholdings",
]

SCDB_ISSUE_AREAS = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"]

UNFAIR_CATEGORIES = [
    "Limitation of liability",
    "Unilateral termination",
    "Unilateral change",
    "Content removal",
    "Contract by using",
    "Choice of law",
    "Jurisdiction",
    "Arbitration",
]

CASEHOLD_LABELS = ["0", "1", "2", "3", "4"]

TASK_NAME_TO_NUM_LABELS = {
    'case_hold': len(CASEHOLD_LABELS),
    'ecthr_a': len(ECTHR_ARTICLES),
    'ecthr_b': len(ECTHR_ARTICLES),
    'eurlex': len(EUROVOC_CONCEPTS),
    'ledgar': len(LEDGAR_CATEGORIES),
    'scotus': len(SCDB_ISSUE_AREAS),
    'unfair_tos': len(UNFAIR_CATEGORIES),
}
